メニュー

＊0つつかれ
＞メインメニュー

＊1つつかれ
＞ステータス確認

＊メインメニュー
：\_q\c【やる気】　（call,gauge,（やる気度）,100）
　（when、（ゴースト２名前）!=0、（when、（ゴースト１名前）!=0、\_a[ゴースト１に]（現在ゴースト判定1）ゴースト1\_a）　φ
（when、（ゴースト２名前）!=0、\_a[ゴースト２に]（現在ゴースト判定2）ゴースト2\_a）　φ
（when、（ゴースト３名前）!=0、\_a[ゴースト３に]（現在ゴースト判定3）ゴースト3\_a）
）
\n[half]\![*]\q[ゴーストのステータス確認,ステータス確認]
（新ゴースト判定1）（新ゴースト判定2）
\n[half]\![*]\q[デベにしきの設定変更,設定変更]
\![*]\q[バグ報告,OnWebClap]
\n\![*]\q[閉じる,なんでもないよ]
：（countNoNameTalk）
\_q

＠現在ゴースト判定1
（when、（開発ゴースト）==1、【*】、【 】）

＠現在ゴースト判定2
（when、（開発ゴースト）==2、【*】、【 】）

＠現在ゴースト判定3
（when、（開発ゴースト）==3、【*】、【 】）

＠新ゴースト判定1
（when、（トーク数）>=50&&（ゴースト２名前）==0、\![*]\_a[新ゴ作成]新しいゴーストを作る\_a）

＠新ゴースト判定2
（when、（トーク数２）>=50&&（ゴースト３名前）==0、\![*]\_a[新ゴ作成]新しいゴーストを作る\_a）

＊ゴースト１に
＄開発ゴースト	1
＄デフォルトサーフェス1	（ゴースト１さくら）
＄デフォルトサーフェス2	（ゴースト１うにゅう）
\p[1]（（ゴースト１さくら））
\p[2]（（ゴースト１うにゅう））
＞メインメニュー

＊ゴースト２に
＄開発ゴースト	2
＄デフォルトサーフェス1	（ゴースト２さくら）
＄デフォルトサーフェス2	（ゴースト２うにゅう）
\p[1]（（ゴースト２さくら））
\p[2]（（ゴースト２うにゅう））
＞メインメニュー

＊ゴースト３に
＄開発ゴースト	3
＄デフォルトサーフェス1	（ゴースト３さくら）
＄デフォルトサーフェス2	（ゴースト３うにゅう）
\p[1]（（ゴースト３さくら））
\p[2]（（ゴースト３うにゅう））
＞メインメニュー

＊新ゴ作成
：\s[5]よぉーっし！\w6
コツは掴んだし、新しいゴースト作ってみようかな！\w9
＞初期シェル選択	（ゴースト１名前）==0
＞初期シェル選択2	（ゴースト２名前）==0
＞初期シェル選択3	（ゴースト３名前）==0
＞これ以上は無理

＊これ以上は無理
：
……\s[4]って流石にこれ以上増やすのは無理ね。\w9\w6
ちょっともう面倒見きれないわ。

＊設定変更
：\s[0]さて、どんな感じで行こうかしらね。\w9\_q
\c【開発頻度】…ランダムトークの間隔設定です。
　\_a[６０秒おき]（喋り頻度判定1）怒涛の(60秒)\_a　\_l[@18,]\_a[１８０秒おき]（喋り頻度判定2）適度に(180秒)\_a
　\_a[３００秒おき]（喋り頻度判定3）のんびり(300秒)\_a　\_a[黙ってて]（喋り頻度判定4）休む(0秒)\_a
\n[half]【開発計画】…どのパラメータを増やすか決定します。
　\_a[トーク中心]（開発傾向判定1）トーク\_a　\_l[@25,]\_a[イベント中心]（開発傾向判定2）イベント\_a
　\_a[さわり反応中心]（開発傾向判定3）さわり反応\_a　\_a[コミュニケート中心]（開発傾向判定4）コミュニケート\_a
\n[half]【通知設定】…やる気変動通知の設定です。
　\_a[通知On]（通知設定判定１）ON\_a　\_a[通知Off]（通知設定判定２）OFF\_a
\n\![*]\q[閉じる,なんでもないよ]
\_q

＊６０秒おき
＄喋り間隔	６０秒
：\s[7]よぉーし！\w5今日はやってやるわよー！！

＊１８０秒おき
＄喋り間隔	１８０秒
：\s[0]よし、適度に他のことしながらやりましょ。

＊３００秒おき
＄喋り間隔	３００秒
：\s[8]まあ、その内にいいアイデア出るでしょ。

＊黙ってて
＄喋り間隔	０秒
：\s[6]一休み、一休み。\w9
慌てない、慌てない。

＠喋り頻度判定1
（when、（喋り間隔）==６０秒、【*】、【 】）

＠喋り頻度判定2
（when、（喋り間隔）==１８０秒、【*】、【 】）

＠喋り頻度判定3
（when、（喋り間隔）==３００秒、【*】、【 】）

＠喋り頻度判定4
（when、（喋り間隔）==０秒、【*】、【 】）

＊トーク中心
＄開発傾向	トーク
：\s[7]よぉーし！\w9
ランダムトークを中心に増やしていくわよ！

＊イベント中心
＄開発傾向	イベント
：\s[7]よぉーし！\w9
イベントを中心に増やしていくわよ！

＊さわり反応中心
＄開発傾向	さわり
：\s[7]よぉーし！\w9
さわり反応を中心に増やしていくわよ！

＊コミュニケート中心
＄開発傾向	コミュ
：\s[7]よぉーし！\w9
コミュ反応を中心に増やしていくわよ！

＠開発傾向判定1
（when、（開発傾向）==トーク、【*】、【 】）

＠開発傾向判定2
（when、（開発傾向）==イベント、【*】、【 】）

＠開発傾向判定3
（when、（開発傾向）==さわり、【*】、【 】）

＠開発傾向判定4
（when、（開発傾向）==コミュ、【*】、【 】）

＊通知On
＄警告判定	1
＞設定変更

＠通知設定判定１
（when、（警告判定）==1、【*】、【 】）

＊通知Off
＄警告判定	0
＞設定変更

＠通知設定判定２
（when、（警告判定）==1、【 】、【*】）

＊やっぱりやめる
＞メインメニュー

＊なんでもないよ
：\e

＊OnWebClap
\![open,inputbox,拍手送信内容,-1,いいね！,--limit=1000]

＊拍手送信内容を教えてもらった
\![execute,http-post,http://clap.webclap.com/clap.php?id=etwaslangsam,--param=message_body="にしき＠（拍手送信内容）",--async=webclap]
＄拍手送信内容	

＊拍手送信内容を空打ちされた
：\_q(キャンセルしました)\_q

＊拍手送信完了
：\s[4]……バグ報告が来てるわね。\w9\w6
対処しないとね。

＊拍手送信失敗
：\_q(「（R4）」によって失敗しました)\_q

＊OnExecuteHTTPComplete
＞拍手送信完了	（R1）==webclap

＊OnExecuteHTTPFailure
＞拍手送信失敗	（R1）==webclap

＠gauge
（call、do、
\f[color,（call,gauge_color,（A0）,（A1））]
（times、（A0）/（gauge_unit）、
\_w[（gauge_delay）]\_l[@（gauge_shift）]（gauge_fragment）
）
\f[color,default]
（when,（A0）==（A1）, [MAX],[（A0）/（A1）]）
）

＠gauge_unit
5

＠gauge_delay
1

＠gauge_shift
-5

＠gauge_fragment
■

＠gauge_color
#（iflist,（A0）*100/（A1）
,<=10,ff0000
,<=20,f39800
,<=30,e0a000
,<=40,d0d000
,<=50,50ff00
,<=70,00ffff
,<100,0000ff
,==100,ff00ff
）

＠do
（A0）

